// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var List = require("bs-platform/lib/js/list.js");
var Path = require("path");
var $$Array = require("bs-platform/lib/js/array.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");

var docsDir = "./docs";

function makeDocsDir(param) {
  if (Fs.existsSync(docsDir)) {
    return 0;
  } else {
    Fs.mkdirSync(docsDir);
    return /* () */0;
  }
}

function pathToKey(path) {
  return Path.basename(path, ".md");
}

function resultToPosts(result) {
  var paths = Object.keys(result);
  return Promise.resolve($$Array.fold_left((function (acc, path) {
                    console.log(path);
                    var match = Js_dict.get(result, path);
                    if (match !== undefined) {
                      var markdownItem = match;
                      var post_key = Path.basename(path, ".md");
                      var post_content = markdownItem.content;
                      var post_data = markdownItem.data;
                      var post = {
                        key: post_key,
                        content: post_content,
                        data: post_data
                      };
                      return List.append(acc, /* :: */[
                                  post,
                                  /* [] */0
                                ]);
                    } else {
                      return acc;
                    }
                  }), /* [] */0, paths));
}

function writePost(post) {
  var fileName = docsDir + ("/" + (post.key + ".html"));
  console.log("Writing", fileName);
  Fs.writeFile(fileName, post.content, (function (error) {
          console.log(error);
          return /* () */0;
        }));
  return /* () */0;
}

function handlePosts(posts) {
  makeDocsDir(/* () */0);
  List.map(writePost, posts);
  return Promise.resolve(/* () */0);
}

var postsDir = "./content/posts";

exports.postsDir = postsDir;
exports.docsDir = docsDir;
exports.makeDocsDir = makeDocsDir;
exports.pathToKey = pathToKey;
exports.resultToPosts = resultToPosts;
exports.writePost = writePost;
exports.handlePosts = handlePosts;
/* fs Not a pure module */
